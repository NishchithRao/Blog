---
import type { GetStaticPathsResult } from "astro";
import type { Article } from "../../types";
import { getPostName } from "../../utils";

import PageWrapper from "../../layouts/page-wrapper.astro";
import Link from "../../components/mdx/link.astro";
import PostCard from "../../components/post-card.astro";

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const allPosts = await Astro.glob<Article>("/posts/*.mdx");
  const categories = [
    ...new Set(allPosts.map((post) => post.frontmatter.category)),
  ];
  return categories.map((category) => ({
    params: { category },
    props: {
      posts: allPosts
        .filter((post) => post.frontmatter.category === category)
        .map((p) => {
          const url = "/" + category + "/" + getPostName(p.url);
          return { url, ...p.frontmatter };
        }),
      categories,
    },
  }));
}

interface Props {
  posts: Array<Article & { url?: string }>;
  categories: string[];
}

const { posts, categories } = Astro.props;
const { category } = Astro.params;
---

<style>
  .posts {
    display: flex;
    flex-direction: column;
    gap: 100px;
  }
</style>

<PageWrapper title={`Blog - ${category}`}>
  <div class="posts">
    <div>
      {
        categories.map((c: string) => (
          <Link active={c === category} href={`/${c}`}>
            <span>{c}</span>
          </Link>
        ))
      }
    </div>
    {
      posts.map((post) => {
        return (
          <PostCard
            category={post.category}
            title={post.title}
            href={post.url}
            image={post.image}
            date={post.date}
            description={post.description}
          />
        );
      })
    }
  </div>
</PageWrapper>
